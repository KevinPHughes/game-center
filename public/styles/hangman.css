/* Add Hangman specific styles here */

body {
    /* Ensure body covers full height and centers content */
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* Removed: justify-content: center; */ /* Allow content to flow from top and enable scrolling */
    position: relative; /* Needed for absolute positioning of overlay */
    /* Removed: overflow: hidden; */ /* Allow scrolling when content exceeds viewport */
}

/* Style for the game area container */
.game-area {
    /* Tailwind classes in HTML handle most styling */
}

/* Style for the hangman drawing area */
#hangmanSVG {
    /* Add any specific styles for the SVG container if needed */
    /* You can set stroke colors/widths directly in the SVG or here */
    /* Ensure SVG scales with its container */
    max-width: 100%;
    height: auto;
}

/* Style for the masked word display */
#maskedWordDisplay {
    /* Add any specific styles for the masked word if needed */
}

/* Style for input fields */
#secretWordInput {
    /* Tailwind classes in HTML handle most styling */
}

/* Style for buttons */
#setWordButton,
#playAgainButton {
    /* Tailwind classes in HTML handle most styling */
}

/* Style for used letters display */
#usedLettersDisplay {
    /* Add any specific styles for used letters if needed */
}

/* Style for game status message */
#gameStatus {
    /* Add any specific styles for the status message if needed */
}

/* Utility class to hide elements */
.hidden {
    display: none;
}

/* Class to hide SVG parts */
.hidden-part {
    display: none;
}

/* --- Animations for Win/Lose --- */

/* Keyframes for a subtle shake animation (for losing status text) */
@keyframes shake {
    0% { transform: translateX(0); }
    20% { transform: translateX(-5px); }
    40% { transform: translateX(5px); }
    60% { transform: translateX(-5px); }
    80% { transform: translateX(5px); }
    100% { transform: translateX(0); }
}

/* Keyframes for a pulse animation (for winning status text) */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Class to apply the shake animation */
.lose-animation {
    animation: shake 0.5s ease-in-out;
}

/* Class to apply the pulse animation */
.win-animation {
    animation: pulse 1s infinite ease-in-out; /* Infinite pulse */
}

/* Style the status message text color on win/lose */
.win-text {
    color: #10B981; /* Tailwind emerald-500 */
}

.lose-text {
    color: #EF4444; /* Tailwind red-500 */
}

/* --- Full Screen Effects --- */

/* Base style for the full-screen overlay */
.overlay {
    position: fixed; /* Fixed position relative to the viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0; /* Initially transparent */
    visibility: hidden; /* Initially hidden from layout and interactions */
    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out; /* Smooth transition */
    z-index: 10; /* Ensure it's above other content */
    pointer-events: none; /* Allow clicks to pass through when hidden */
}

/* Style for the lose overlay */
#loseOverlay {
    background-color: rgba(239, 68, 68, 0.3); /* Semi-transparent red */
}

/* Class to show the overlay */
.overlay.show-overlay {
    opacity: 1;
    visibility: visible;
    pointer-events: auto; /* Enable interactions when visible (if needed, not for this overlay) */
}

/* Keyframes for a subtle green background pulse (for winning) */
@keyframes winBackgroundPulse {
    0% { background-color: #D1FAE5; /* Tailwind green-100 */ }
    50% { background-color: #A7F3D0; /* Tailwind emerald-200 */ }
    100% { background-color: #D1FAE5; /* Tailwind green-100 */ }
}

/* Class to apply the win background pulse to the body */
body.win-background {
    animation: winBackgroundPulse 1.5s infinite ease-in-out; /* Infinite pulse */
}

/* --- On-Screen Keyboard Styles --- */
#keyboard {
    /* Using Tailwind flex classes for layout */
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
}

/* Style for individual letter buttons */
.keyboard-letter {
    padding: 0.75rem 0.5rem;
    width: 2.5rem; /* Fixed width for uniform buttons */
    background-color: #E5E7EB; /* Tailwind gray-200 */
    color: #374151; /* Tailwind gray-700 */
    font-weight: bold;
    border-radius: 0.25rem;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, transform 0.1s ease-in-out;
    text-align: center;
    text-transform: uppercase;
    font-size: 1.1rem;
    user-select: none;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Style for guessed/disabled letters */
.keyboard-letter.guessed {
    background-color: #D1D5DB;
    color: #9CA3AF;
    cursor: default;
    opacity: 0.6;
    pointer-events: none;
}

/* Enhanced hover and active effects */
.keyboard-letter:not(.guessed):hover {
    background-color: #D1D5DB;
    transform: translateY(-1px);
}

.keyboard-letter:not(.guessed):active {
    background-color: #9CA3AF; /* Darker when pressed */
    transform: translateY(1px);
}

/* --- Modern Result Modals --- */
.result-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-out;
}

.result-modal.show-modal {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background-color: white;
    padding: 2rem;
    border-radius: 1rem;
    max-width: 90%;
    width: 400px;
    text-align: center;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    transform: translateY(50px);
    opacity: 0;
    transition: all 0.5s cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.result-modal.show-modal .modal-content {
    transform: translateY(0);
    opacity: 1;
}

.icon-container {
    height: 80px;
    width: 80px;
    margin: 0 auto 1rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.win-modal .icon-container {
    background-color: #ECFDF5; /* Light green */
}

.lose-modal .icon-container {
    background-color: #FEF2F2; /* Light red */
}

.result-icon {
    height: 50px;
    width: 50px;
    stroke-dasharray: 100;
    stroke-dashoffset: 100;
}

.result-modal.show-modal .result-icon {
    animation: draw-icon 1s ease forwards;
}

@keyframes draw-icon {
    from {
        stroke-dashoffset: 100;
    }
    to {
        stroke-dashoffset: 0;
    }
}

.win-icon {
    color: #10B981; /* Green */
}

.lose-icon {
    color: #EF4444; /* Red */
}

.result-modal h2 {
    font-size: 1.8rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
    opacity: 0;
    transform: translateY(20px);
}

.result-modal.show-modal h2 {
    animation: fade-up 0.6s ease forwards 0.3s;
}

.word-reveal {
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
    opacity: 0;
    transform: translateY(20px);
}

.result-modal.show-modal .word-reveal {
    animation: fade-up 0.6s ease forwards 0.5s;
}

@keyframes fade-up {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.modal-button {
    background-color: #4F46E5; /* Indigo */
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: all 0.2s;
    opacity: 0;
    transform: translateY(20px);
}

.win-modal .modal-button {
    background-color: #10B981; /* Green */
}

.lose-modal .modal-button {
    background-color: #6B7280; /* Gray */
}

.result-modal.show-modal .modal-button {
    animation: fade-up 0.6s ease forwards 0.7s;
}

.modal-button:hover {
    filter: brightness(1.1);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.modal-button:active {
    transform: translateY(0);
}

/* Confetti container styling */
.confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 50;
    pointer-events: none;
}
